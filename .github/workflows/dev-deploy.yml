name: Dev

on:
  push:
    branches:
      - DEV-62

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with gradle
        run : ./gradlew build -x test

      - name: Build Docker image
        run: |
          docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/staging-mju-graduate-server:latest \
            --build-arg DATASOURCE_URL=${{ secrets.STAGING_DB_URL }} \
            --build-arg DATASOURCE_USERNAME=${{ secrets.STAGING_DB_USERNAME }} \
            --build-arg DATASOURCE_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }} \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/staging-mju-graduate-server:latest

      - name: Docker Deploy executing remote ssh commands using ssh_key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_KEY }}
          script: |
            cd ~/staging-mju-graduate-server

            echo " Redis 컨테이너 실행 (기존에 없을 경우만)"
            docker ps -a --format '{{.Names}}' | grep -q '^mg-redis$' || \
            docker run -d --name mg-redis -p 6379:6379 redis:latest
            echo "기존 앱 컨테이너 중지 및 삭제"
            docker stop staging-mju-graduate-server || true
            docker rm staging-mju-graduate-server || true

            echo "최신 앱 이미지 pull"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/staging-mju-graduate-server:latest

            echo "앱 컨테이너 실행"
            docker run -d --name staging-mju-graduate-server \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=dev \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e DATASOURCE_URL=${{ secrets.STAGING_DB_URL }} \
              -e DATASOURCE_USERNAME=${{ secrets.STAGING_DB_USERNAME }} \
              -e DATASOURCE_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }} \
              -e REDIS_HOST=localhost \
              -e REDIS_PORT=6379 \
              ${{ secrets.DOCKERHUB_USERNAME }}/staging-mju-graduate-server:latest

            docker image prune -f
